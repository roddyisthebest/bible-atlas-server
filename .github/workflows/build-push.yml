name: Build & Deploy API

on:
  push:
    branches: ['main'] # main 푸시 때
    tags: ['v*'] # vX.Y.Z 태그 푸시 때도
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/api
  DOMAIN: bible-atlas-server.xyz

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta (create nice tags)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=sha,format=short                 # e.g. 1a2b3c4
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag                    # vX.Y.Z
            type=semver,pattern={{version}}       # X.Y.Z

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (linux/amd64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./api/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            set -euo pipefail
            cd ~/apps/bible-atlas


            # 최신 이미지 받고 재기동
            docker compose pull
            docker compose up -d

            # TypeORM 마이그레이션 (경로 맞추세요)
            if docker compose exec -T api test -f dist/data-source.js; then
              docker compose exec -T api node ./node_modules/typeorm/cli.js -d dist/data-source.js migration:run
            else
              echo "⚠ dist/data-source.js 없음 → migration 스킵"
            fi

            # Caddy 핫 리로드
            docker compose up -d caddy
            docker compose exec -T caddy caddy reload --config /etc/caddy/Caddyfile || true

      - name: HTTPS health check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }} # ← 추가
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            set -e
            for i in {1..12}; do
              CODE=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.DOMAIN }}/health || true)
              if [ "$CODE" = "200" ]; then
                echo "HTTPS health OK"; exit 0
              fi
              echo "waiting https health... ($i/12)"; sleep 5
            done
            echo "health check failed"; exit 1
